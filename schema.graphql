schema {
  query: Query
  mutation: Mutation
}

type Query {
  getImageUploadUrl(extension: String, contentType: String): AWSURL!
    @aws_auth(cognito_groups: ["owner", "host"])
}

type Mutation {
  createPet(petInput: PetInput!): Pet! @aws_auth(cognito_groups: ["owner"])
}

input PetInput {
  name: String!
  birthDate: AWSDate!
  bio: String
  type: PetType!
}

input BookingInput {
  hostId: ID!
  petId: ID!
  fromDate: AWSDateTime!
  toDate: AWSDateTime!
}

interface IProfile {
  id: ID!
  name: String!
  imageUrl: AWSURL
  birthDate: AWSDate!
  bio: String
  address: String!
  addressNumber: Int!
  zipCode: String!
  cellphone: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime
  deletedAt: AWSDateTime
}

type PetOwnerProfile implements IProfile {
  id: ID!
  name: String!
  imageUrl: AWSURL
  birthDate: AWSDate!
  bio: String
  address: String!
  addressNumber: Int!
  zipCode: String!
  cellphone: String!
  pets: PetsPage!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime
  deletedAt: AWSDateTime
}

type Pet {
  id: ID!
  owner: PetOwnerProfile!
  name: String!
  birthDate: AWSDate!
  bio: String
  type: PetType!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime
  deletedAt: AWSDateTime
}

type PetsPage {
  pets: [Pet!]
  nextToken: String
}

enum PetType {
  Cat
  Dog
  Bird
  Rodent
}

enum ResidenceType {
  House
  Apartment
}

enum BookingStatus {
  Pending
  Rejected
  Accepted
  Canceled
  Completed
}
