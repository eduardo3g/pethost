service: pethost
frameworkVersion: '2'

plugins:
  - serverless-appsync-plugin
  - serverless-iam-roles-per-function
  - serverless-export-env

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  environment:
    STAGE: ${self:custom.stage}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'

package:
  exclude:
    - package-lock.json
    - package.json

custom:
  region: ${opt:region, self:provider.region}
  stage: ${opt:stage, self:provider.stage}
  appSync:
    - ${file(serverless.appsync-api.yml)}

functions:
  confirmUserSignup: ${file(src/resources/lambda/ConfirmUserSignupLambda.yml):ConfirmUserSignup}

resources:
  Resources:
    CognitoUserPool: ${file(src/resources/cognito/CognitoUserPool.yml):CognitoUserPool}
    UserPoolInvokeConfirmUserSignupLambdaPermission: ${file(src/resources/cognito/UserPoolInvokeConfirmUserSignupLambdaPermission.yml):UserPoolInvokeConfirmUserSignupLambdaPermission}
    WebUserPoolClient: ${file(src/resources/cognito/WebUserPoolClient.yml):WebUserPoolClient}

    UsersTable: ${file(src/resources/dynamodb/UsersTable.yml):UsersTable}

  Outputs:
    AwsRegion:
      Value: ${self:custom.region}

    CognitoUserPoolId:
      Value: !Ref CognitoUserPool

    WebCognitoUserPoolClientId:
      Value: !Ref WebUserPoolClient
